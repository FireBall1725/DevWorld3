buildscript {
    repositories {
        maven { url = 'https://repo.u-team.info' }
    }
    dependencies {
        classpath 'info.u-team.curse_gradle_uploader:curse_gradle_uploader:1.5.0'
        classpath 'com.github.breadmoirai:github-release:2.3.7'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'com.github.breadmoirai.github-release' version '2.3.7'
}

version = System.getenv("CI_VERSION") ?: "0.0.0"
group = 'ca.fireball1725.devworld' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'devworld'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'devworld'

            mods {
                devworld {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'devworld'

            mods {
                devworld {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'devworld'

            mods {
                devworld {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'devworld', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                devworld {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19-41.1.0'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "DevWorld3",
                "Specification-Vendor"    : "FireBall1725",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "${project_name}",
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : "FireBall1725",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

apply plugin: 'info.u_team.curse_gradle_uploader'

curseforge {
    apiKey = System.getenv('CURSE_API_KEY') ?: ''
    project {
        id = curse_project_id
        changelog = file('CHANGELOG.md')
        releaseType = curse_release_type
        addGameVersion minecraft_version

        mainArtifact(jar) {

        }
    }
}

apply plugin: 'com.github.breadmoirai.github-release'

String readChangelogString(String filePath) {
    File file = new File(filePath)
    if(file.exists()) {
        return file.text
    }

    return ""
}

githubRelease {
    token System.getenv("GITHUB_TOKEN") ?: "InvalidP@ssword"
    owner System.getenv("CIRCLE_PROJECT_USERNAME") ?: ""
    repo System.getenv("CIRCLE_PROJECT_REPONAME") ?: ""
    targetCommitish = System.getenv("CIRCLE_SHA1") ?: ""
    body {
        return readChangelogString("CHANGELOG.md")
    }
    releaseAssets jar.destinationDir.listFiles()
    overwrite true
    tagName = project.version
    releaseName = "v${project.version}"
}